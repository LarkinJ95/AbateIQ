rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Allows access to client documents.
     * @path /clients/{clientId}
     */
    match /clients/{clientId} {
      allow get: if isSignedIn();
      allow list: if false;
      allow create: if isSignedIn();
      allow update: if isSignedIn();
      allow delete: if isSignedIn();
    }

    /**
     * @description Allows access to project documents.
     * @path /projects/{projectId}
     */
    match /projects/{projectId} {
      allow get: if isSignedIn();
      allow list: if false;
      allow create: if isSignedIn();
      allow update: if isSignedIn();
      allow delete: if isSignedIn();
    }

    /**
     * @description Allows access to location documents.
     * @path /locations/{locationId}
     */
    match /locations/{locationId} {
      allow get: if isSignedIn();
      allow list: if false;
      allow create: if isSignedIn();
      allow update: if isSignedIn();
      allow delete: if isSignedIn();
    }

    /**
     * @description Allows access to task documents.
     * @path /tasks/{taskId}
     */
    match /tasks/{taskId} {
      allow get: if isSignedIn();
      allow list: if false;
      allow create: if isSignedIn();
      allow update: if isSignedIn();
      allow delete: if isSignedIn();
    }

    /**
     * @description Allows access to personnel documents.
     * @path /personnel/{personnelId}
     */
    match /personnel/{personnelId} {
      allow get: if isSignedIn();
      allow list: if false;
      allow create: if isSignedIn();
      allow update: if isSignedIn();
      allow delete: if isSignedIn();
    }

    /**
     * @description Allows access to equipment documents.
     * @path /equipment/{equipmentId}
     */
    match /equipment/{equipmentId} {
      allow get: if isSignedIn();
      allow list: if false;
      allow create: if isSignedIn();
      allow update: if isSignedIn();
      allow delete: if isSignedIn();
    }

    /**
     * @description Allows access to sample documents.
     * @path /samples/{sampleId}
     */
    match /samples/{sampleId} {
      allow get: if isSignedIn();
      allow list: if false;
      allow create: if isSignedIn();
      allow update: if isSignedIn();
      allow delete: if isSignedIn();

      /**
       * @description Allows access to result documents under a sample.
       * @path /samples/{sampleId}/results/{resultId}
       */
      match /results/{resultId} {
        allow get: if isSignedIn();
        allow list: if false;
        allow create: if isSignedIn();
        allow update: if isSignedIn();
        allow delete: if isSignedIn();
      }

      /**
       * @description Allows access to attachment documents under a sample.
       * @path /samples/{sampleId}/attachments/{attachmentId}
       */
      match /attachments/{attachmentId} {
        allow get: if isSignedIn();
        allow list: if isSignedIn();
        allow create: if isSignedIn();
        allow update: if isSignedIn();
        allow delete: if isSignedIn();
      }
    }

    /**
     * @description Allows access to exceedance documents under a result.
     * @path /results/{resultId}/exceedance
     */
    match /results/{resultId}/exceedance {
      allow get: if isSignedIn();
      allow list: if false;
      allow create: if isSignedIn();
      allow update: if isSignedIn();
      allow delete: if isSignedIn();
    }

    /**
     * @description Allows access to exposureLimit documents.
     * @path /exposureLimits/{exposureLimitId}
     */
    match /exposureLimits/{exposureLimitId} {
      allow get: if isSignedIn();
      allow list: if false;
      allow create: if isSignedIn();
      allow update: if isSignedIn();
      allow delete: if isSignedIn();
    }

    /**
     * @description Allows access to negativeExposureAssessment documents under a project.
     * @path /projects/{projectId}/negativeExposureAssessments/{neaId}
     */
    match /projects/{projectId}/negativeExposureAssessments/{neaId} {
      allow get: if isSignedIn();
      allow list: if false;
      allow create: if isSignedIn();
      allow update: if isSignedIn();
      allow delete: if isSignedIn();
    }
    
    /**
     * @description Allows access to surveys
     * @path /surveys/
     */
    match /surveys/{surveyId} {
        allow get: if isSignedIn();
        allow list: if isSignedIn();
        allow create: if isSignedIn();
        allow update: if isSignedIn();
        allow delete: if isSignedIn();
    }
  }

  /**
   * @description Checks if the user is signed in.
   * @return True if the user is signed in, false otherwise.
   */
  function isSignedIn() {
    return request.auth != null;
  }
}